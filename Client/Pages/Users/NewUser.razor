@page "/users/create"
@layout MainLayout
@inject IAccountsRepository accountsRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IDisplayMessage displayMessage
@inject ILogger<UserLoginDTO> logger
@attribute [Authorize(Roles = Constants.Admin)]

@using Datacar.Client.Auth

<div class="container">
    <div class="row">
        <div class="col col-lg-6">
            <div class="list-title">
                <h3>Novo utilizador</h3>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col col-lg-6 form-list">
            <div>
                <UserForm UserInfo=userInfo OnValidSubmit="RegisterUser"></UserForm>
            </div>
        </div>
    </div>
</div>


@code {
    private UserInfo userInfo = new UserInfo();

    //TODO put in helpers
    private async void sweetalert(String type, String message)
    {
        if (type == Constants.SWError)
        {
            await displayMessage.DisplayErrorMessage(message);
        }
        else if (type == Constants.SWSuccess)
        {
            await displayMessage.DisplaySuccessMessage(message);
        }
    }

    private async Task RegisterUser()

    {
        try
        {
            logger.LogInformation($"New User : {userInfo.Email}");
            var userToken = await accountsRepository.Register(userInfo);
            //if I want to try to login immediatelly with new user credentials
            //await loginService.Login(userToken);
            sweetalert(Constants.SWSuccess, Constants.NewUserCreated);
            navigationManager.NavigateTo("users");
        }
        catch (Exception ex)
        {
            logger.LogError($"Error creating new user : {ex.Message}");
            sweetalert(Constants.SWError, Constants.AuthorizationFailed);

        }
    }
}

