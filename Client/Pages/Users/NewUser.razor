@page "/users/create"
@layout MainLayout
@inject IAccountsRepository accountsRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IDisplayMessage displayMessage
@attribute [Authorize(Roles = Constants.Admin)]

@using Datacar.Client.Auth

<div class="container">
    <div class="row">
        <div class="col col-lg-6">
            <div class="list-title">
                <h3>Novo utilizador</h3>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col col-lg-6 form-list">
            <div>
                <UserForm UserInfo=userInfo OnValidSubmit="RegisterUser"></UserForm>
            </div>

            @*<EditForm Model="userInfo" OnValidSubmit="RegisterUser">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label>Email:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="@userInfo.Email" />
                            <ValidationMessage For="@(() => userInfo.Email)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Password:</label>
                        <div>
                            <InputPassword class="form-control" @bind-Value="@userInfo.Password" />
                            <ValidationMessage For="@(() => userInfo.Password)" />
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Register</button>
                    <a href="users">Voltar</a>
                </EditForm>*@
        </div>
    </div>
</div>


@code {
    private UserInfo userInfo = new UserInfo();

    private async void sweetalert(String type, String message)
    {
        await displayMessage.DisplayErrorMessage(message);
    }

    private async Task RegisterUser()

    {
        try
        {
            Console.WriteLine($"NEW USER: Email: {userInfo.Email}");
            Console.WriteLine($"NEW USER: Language: {userInfo.Language}");
            //var userToken = await accountsRepository.Register(userInfo);
            //await loginService.Login(userToken);
            //navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            sweetalert(Constants.SWError, Constants.AuthorizationFailed);

        }
    }
}

