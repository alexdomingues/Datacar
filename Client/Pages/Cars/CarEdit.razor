@page "/cars/edit/{CarId:int}"
@inject ICarsRepository carsRepository
@inject NavigationManager navigationManager
@inject ILogger<Cars> logger

<h3>Editar viatura</h3>

@if (carInfo != null)
{
       <div class="main-page-container">
        <div class="row main-page-header">
            <div class="col col-lg-12 col-md-12">
                <main-page-title>Atualizar viatura @carInfo.License</main-page-title>
            </div>
        </div>
    </div>

    <CarForm Car="carInfo" OnValidSubmit="Edit" />
}
else
{
    <p>Loading car info</p>
}

@code {
    [Parameter] public int CarId { get; set; }
    public Cars carInfo;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            logger.LogInformation($"Car Edit Page: GetCarById {CarId}");
            carInfo = await carsRepository.GetCarById(CarId);
        }
        catch (Exception ex)
        {
            logger.LogError($"Car Edit Page: {ex.ToString()}");
        }
    }

    private async Task Edit()
    {
        try
        {            
            await carsRepository.UpdateCar(carInfo);
            logger.LogInformation($"Cars Edit Page: Car {carInfo.Id} updated");
            navigationManager.NavigateTo("cars");
        }
        catch (Exception ex)
        {
            logger.LogError($"Error:{ex.Message.ToString()}");
        }
    }
}
