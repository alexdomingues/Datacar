@*<EditForm Model="Project" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
    <label>Project Name:</label>
    <div>
    <InputText class="form-control" @bind-Value="@Project.Name"></InputText>
    <ValidationMessage For="@(() => Project.Name)" />
    </div>
    <label>Project Description:</label>
    <div>
    <InputText class="form-control" @bind-Value="@Project.Description"></InputText>
    </div>
    <label>Project Owner:</label>
    <div>
    <InputText class="form-control" @bind-Value="@Project.Owner"></InputText>
    </div>
    <label>Project State:</label>
    <div>
    <InputText class="form-control" @bind-Value="@Project.State"></InputText>
    </div>
    <label>Kick Off Date:</label>
    <div>
    <InputDate class="form-control" @bind-Value="@Project.KickoffDate" />
    <ValidationMessage For="@(() => Project.KickoffDate)" />
    </div>
    <label>Expected End Date:</label>
    <div>
    <InputDate class="form-control" @bind-Value="@Project.ExpectedEndDate" />
    <ValidationMessage For="@(() => Project.ExpectedEndDate)" />
    </div>
    </div>

    <br />
    <button class="btn btn-success" type="submit">Save</button>
    </EditForm>*@

<div class="form-group">
    <label>Project Name:</label>
    <div>
        <InputText class="form-control"></InputText>
        <button class="btn btn-success" type="submit">Save</button>
    </div>
</div>

@code {

    //[Parameter] public Project Project { get; set; }

    //// Cascading parameter to invoke Create or Edit method
    //[Parameter] public EventCallback OnValidSubmit { get; set; }
}
