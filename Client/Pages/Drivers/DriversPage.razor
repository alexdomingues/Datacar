@page "/drivers"
@inject IDriversRepository driversRepository
@inject ILogger<Drivers> logger

@*
    @inject SingletonService singleton
    @inject TransientService transient
*@
<div class="container">
    <div class="row main-page-header">
        <div class="col col-lg-8 col-md-8">
            <h3>Lista de Condutores</h3>
        </div>
        <div class="col col-lg-4 col-md-8">
            <a class="btn btn-info" href="/drivers/create">Criar condutor</a>
        </div>
    </div>
</div>
<div class="main-list">
    <DriversList Drivers="drivers" />
</div>

@*<div>
    <GenericList List="cars">
    <WholeListTemplate>
    <table class="table table-striped">
    <thead>
    <tr>
    <th>
    </th>
    <th>Matrícula</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in cars)
    {
    <tr>
    <td>
    <a class="btn btn-success">Edit</a>
    <button class="btn btn-danger">Delete</button>
    </td>
    <td>@item.License</td>
    </tr>
    }
    </tbody>
    </table>
    </WholeListTemplate>
    </GenericList>
    </div>*@
@code {
    List<Drivers> drivers;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            logger.LogInformation("Get List of Drivers");
            drivers = await driversRepository.GetDrivers();
            
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    //
    //singleton.Value += 1;
    //transient.Value += 1
}
